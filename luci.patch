diff --git a/applications/luci-app-openvpn/luasrc/controller/openvpn.lua b/applications/luci-app-openvpn/luasrc/controller/openvpn.lua
index a30ac81a9..b41fff21d 100644
--- a/applications/luci-app-openvpn/luasrc/controller/openvpn.lua
+++ b/applications/luci-app-openvpn/luasrc/controller/openvpn.lua
@@ -31,8 +31,7 @@ function ovpn_upload()
 
 		http.setfilehandler(
 			function(meta, chunk, eof)
-				local data = util.trim(chunk:gsub("\r\n", "\n")) .. "\n"
-				data = util.trim(data:gsub("[\128-\255]", ""))
+				local data = chunk:gsub("\r\n", "\n")
 
 				if not fp and meta and meta.name == "ovpn_file" then
 					fp = io.open(file, "w")
diff --git a/applications/luci-app-openvpn/luasrc/model/cbi/openvpn-file.lua b/applications/luci-app-openvpn/luasrc/model/cbi/openvpn-file.lua
index fa823964a..7197f45ef 100644
--- a/applications/luci-app-openvpn/luasrc/model/cbi/openvpn-file.lua
+++ b/applications/luci-app-openvpn/luasrc/model/cbi/openvpn-file.lua
@@ -51,7 +51,7 @@ function file.cfgvalue()
 end
 
 function file.write(self, section, data1)
-	return fs.writefile(cfg_file, "\n" .. util.trim(data1:gsub("\r\n", "\n")) .. "\n")
+	return fs.writefile(cfg_file, util.trim(data1:gsub("\r\n", "\n")) .. "\n")
 end
 
 function file.remove(self, section, value)
diff --git a/applications/luci-app-polipo/luasrc/model/cbi/polipo.lua b/applications/luci-app-polipo/luasrc/model/cbi/polipo.lua
index 6031c8423..8308b2c46 100644
--- a/applications/luci-app-polipo/luasrc/model/cbi/polipo.lua
+++ b/applications/luci-app-polipo/luasrc/model/cbi/polipo.lua
@@ -92,6 +92,25 @@ o.optional = true
 o.placeholder = "username:password"
 
 
+o = s:taboption("proxy", Value, "socksParentProxy",
+	translate("SOCKS parent proxy address"),
+	translate("SOCKS parent proxy address (in host:port format), to which Polipo " ..
+		"will forward the requests."))
+
+
+o.optional = true
+o.datatype = "hostport"
+
+
+o = s:taboption("proxy", ListValue, "socksProxyType",
+	translate("SOCKS parent proxy type"),
+	translate("The variant of the SOCKS protocol being used."))
+
+o.default = "socks5"
+o:value("socks4a", translate("SOCKS4a"))
+o:value("socks5", translate("SOCKS5"))
+
+
 -- Logging
 s:taboption("logging", Flag, "logSyslog", translate("Log to syslog"))
 
diff --git a/applications/luci-app-tinyproxy/luasrc/model/cbi/tinyproxy.lua b/applications/luci-app-tinyproxy/luasrc/model/cbi/tinyproxy.lua
index e38dec4b9..7d21f36b3 100644
--- a/applications/luci-app-tinyproxy/luasrc/model/cbi/tinyproxy.lua
+++ b/applications/luci-app-tinyproxy/luasrc/model/cbi/tinyproxy.lua
@@ -215,11 +215,13 @@ s.anonymous = true
 s.addremove = true
 
 
-t = s:option(ListValue, "type", translate("Policy"),
-	translate("<em>Via proxy</em> routes requests to the given target via the specified upstream proxy, <em>Reject access</em> disables any upstream proxy for the target"))
+t = s:option(ListValue, "type", translate("Proxy type"),
+	translate("Choose upstream proxy type. <em>No proxy</em> disables use of an upstream proxy for the target"))
 
-t:value("proxy", translate("Via proxy"))
-t:value("reject", translate("Reject access"))
+t:value("http", translate("HTTP proxy"))
+t:value("socks4", translate("SOCKS4 proxy"))
+t:value("socks5", translate("SOCKS5 proxy"))
+t:value("none", translate("No proxy"))
 
 
 ta = s:option(Value, "target", translate("Target host"),
@@ -227,13 +229,14 @@ ta = s:option(Value, "target", translate("Target host"),
 
 ta.rmempty = true
 ta.placeholder = "0.0.0.0/0"
-ta.datatype = "host(1)"
 
 
 v = s:option(Value, "via", translate("Via proxy"),
 	translate("Specifies the upstream proxy to use for accessing the target host. Format is <code>address:port</code>"))
 
-v:depends({type="proxy"})
+v:depends({type="http"})
+v:depends({type="socks4"})
+v:depends({type="socks5"})
 v.placeholder = "10.0.0.1:8080"
 v.datatype = "ip4addrport"
 
